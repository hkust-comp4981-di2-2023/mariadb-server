--source include/have_binlog_format_mixed.inc

SET GLOBAL binlog_gtid_index= 0;
SET GLOBAL binlog_gtid_index= 1;

--let $file= query_get_value(SHOW MASTER STATUS, File, 1)
--let $pos1= query_get_value(SHOW MASTER STATUS, Position, 1)
SET @gtid1= @@gtid_binlog_pos;
CREATE TABLE t1 (a INT PRIMARY KEY);
--let $pos2= query_get_value(SHOW MASTER STATUS, Position, 1)
SET @gtid2= @@gtid_binlog_pos;
INSERT INTO t1 VALUES (1);
--let $pos3= query_get_value(SHOW MASTER STATUS, Position, 1)
SET @gtid3= @@gtid_binlog_pos;
INSERT INTO t1 VALUES (2);
INSERT INTO t1 VALUES (3);
INSERT INTO t1 VALUES (4);
--let $pos4= query_get_value(SHOW MASTER STATUS, Position, 1)
SET @gtid4= @@gtid_binlog_pos;
INSERT INTO t1 VALUES (5);
--let $pos5= query_get_value(SHOW MASTER STATUS, Position, 1)
SET @gtid5= @@gtid_binlog_pos;

--disable_query_log
--let $i=0
while ($i < 100) {
  eval INSERT INTO t1 VALUES (6 + $i);
  inc $i;
}
--enable_query_log
--let $pos6= query_get_value(SHOW MASTER STATUS, Position, 1)
SET @gtid6= @@gtid_binlog_pos;

INSERT INTO t1 VALUES (106);
INSERT INTO t1 VALUES (107);

# Test first the hot and then the cold index.
--let $i= 0
while ($i < 2) {
  --disable_query_log
  eval SELECT BINLOG_GTID_POS('$file', $pos1) = @gtid1 AS Ok;
  eval SELECT BINLOG_GTID_POS('$file', $pos2) = @gtid2 AS Ok;
  eval SELECT BINLOG_GTID_POS('$file', $pos3) = @gtid3 AS Ok;
  eval SELECT BINLOG_GTID_POS('$file', $pos4) = @gtid4 AS Ok;
  eval SELECT BINLOG_GTID_POS('$file', $pos5) = @gtid5 AS Ok;
  eval SELECT BINLOG_GTID_POS('$file', $pos6) = @gtid6 AS Ok;
  --enable_query_log

  inc $i;
  if ($i == 1) {
    FLUSH BINARY LOGS;
  }
}

--echo *** Test that purge deletes the gtid index files. ***
FLUSH BINARY LOGS;
INSERT INTO t1 VALUES (200);
--let $file2= query_get_value(SHOW MASTER STATUS, File, 1)
FLUSH BINARY LOGS;
INSERT INTO t1 VALUES (201);
--let $file3= query_get_value(SHOW MASTER STATUS, File, 1)
FLUSH BINARY LOGS;
INSERT INTO t1 VALUES (202);
--let $file4= query_get_value(SHOW MASTER STATUS, File, 1)

--replace_result $file3 FILE
eval PURGE BINARY LOGS TO '$file3';

--let $MYSQLD_DATADIR= `select @@datadir`
--error 1
--file_exists $MYSQLD_DATADIR/$file.idx
--error 1
--file_exists $MYSQLD_DATADIR/$file2.idx
--file_exists $MYSQLD_DATADIR/$file3.idx
--file_exists $MYSQLD_DATADIR/$file4.idx

DROP TABLE t1;
